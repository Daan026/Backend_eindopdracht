{
	"info": {
		"_postman_id": "fonds-de-lecture-libre-complete-api",
		"name": "Postman Collection V2",
		"description": "Fonds de Lecture Libre endpoints testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('token', response.token);",
									"    console.log('Token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "login"]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('token', response.token);",
									"    console.log('Admin Token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Admin\",\n  \"password\": \"fondsdelecturelibre\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "login"]
						}
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/profile?username=testuser",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "profile"],
							"query": [
								{
									"key": "username",
									"value": "testuser"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìö E-Books",
			"item": [
				{
					"name": "Get All E-Books",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ebooks",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks"]
						}
					},
					"response": []
				},
				{
					"name": "Get E-Book by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ebooks/1",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks", "1"]
						}
					},
					"response": []
				},
				{
					"name": "Upload E-Book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "title",
									"value": "Test Book",
									"type": "text"
								},
								{
									"key": "author",
									"value": "Test Author",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is a test book for demonstration purposes.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/ebooks",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks"]
						}
					},
					"response": []
				},
				{
					"name": "Download E-Book (CORRECT URL)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ebooks/download/1",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks", "download", "1"]
						}
					},
					"response": []
				},
				{
					"name": "Update E-Book",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Book Title\",\n  \"author\": \"Updated Author\",\n  \"description\": \"Updated description for the book.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ebooks/1",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks", "1"]
						}
					},
					"response": []
				},
				{
					"name": "Delete E-Book",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ebooks/1",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks", "1"]
						}
					},
					"response": []
				},
				{
					"name": "Advanced Search E-Books",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ebooks/search?title=test&author=author&page=0&size=10",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks", "search"],
							"query": [
								{
									"key": "title",
									"value": "test"
								},
								{
									"key": "author",
									"value": "author"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "‚≠ê Reviews",
			"item": [
				{
					"name": "Create Review (CORRECT URL)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rating\": 5,\n  \"comment\": \"Excellent book! Highly recommended.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ebooks/1/reviews",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks", "1", "reviews"]
						}
					},
					"response": []
				},
				{
					"name": "Get Reviews for E-Book (CORRECT URL)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ebooks/1/reviews",
							"host": ["{{baseUrl}}"],
							"path": ["ebooks", "1", "reviews"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üè∑Ô∏è Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": ["{{baseUrl}}"],
							"path": ["categories"]
						}
					},
					"response": []
				},
				{
					"name": "Get Category by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/categories/1",
							"host": ["{{baseUrl}}"],
							"path": ["categories", "1"]
						}
					},
					"response": []
				},
				{
					"name": "Create Category (ADMIN ONLY)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Science Fiction\",\n  \"description\": \"Books about futuristic concepts and technology\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": ["{{baseUrl}}"],
							"path": ["categories"]
						}
					},
					"response": []
				},
				{
					"name": "Update Category (ADMIN ONLY)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Category\",\n  \"description\": \"Updated description\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categories/1",
							"host": ["{{baseUrl}}"],
							"path": ["categories", "1"]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category (ADMIN ONLY)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/categories/1",
							"host": ["{{baseUrl}}"],
							"path": ["categories", "1"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìä Dashboard",
			"item": [
				{
					"name": "Get User Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dashboard",
							"host": ["{{baseUrl}}"],
							"path": ["dashboard"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë§ User Profile",
			"item": [
				{
					"name": "Upload Profile Photo (CORRECT URL)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/userprofile/1/photo",
							"host": ["{{baseUrl}}"],
							"path": ["userprofile", "1", "photo"]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile Photo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userprofile/1/photo",
							"host": ["{{baseUrl}}"],
							"path": ["userprofile", "1", "photo"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üß™ Test Endpoints",
			"item": [
				{
					"name": "Public Test Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/test/public",
							"host": ["{{baseUrl}}"],
							"path": ["test", "public"]
						}
					},
					"response": []
				},
				{
					"name": "Member Test Endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test/member",
							"host": ["{{baseUrl}}"],
							"path": ["test", "member"]
						}
					},
					"response": []
				},
				{
					"name": "Admin Test Endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test/admin",
							"host": ["{{baseUrl}}"],
							"path": ["test", "admin"]
						}
					},
					"response": []
				}
			]
		}
	]
}
