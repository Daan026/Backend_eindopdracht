{
	"info": {
		"_postman_id": "fonds-de-lecture-libre-V2",
		"name": "‚úÖ Fonds de Lecture Libre - V3",
		"description": "üìã INSTRUCTIES:\n1. Import deze collection\n2. Start met 'Admin Login' request\n3. Alle andere requests werken automatisch\n\n‚úÖ Alle URLs zijn hardcoded en getest\n‚úÖ Token management is automatisch\n‚úÖ Geen variabele problemen meer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üîê AUTHENTICATION",
			"item": [
				{
					"name": "‚úÖ Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('token', response.token);",
									"    console.log('‚úÖ Admin token saved successfully!');",
									"    pm.test('Admin login successful', function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"} else {",
									"    console.log('‚ùå Admin login failed');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Admin\",\n    \"password\": \"fondsdelecturelibre\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				},
				{
					"name": "Register New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/register",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "Login Regular User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('token', response.token);",
									"    console.log('‚úÖ User token saved successfully!');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìö E-BOOKS MANAGEMENT",
			"item": [
				{
					"name": "‚úÖ Upload E-Book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Test E-Book Upload",
									"type": "text"
								},
								{
									"key": "author",
									"value": "Test Author",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Test e-book upload via Postman",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/ebooks",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "ebooks"]
						}
					},
					"response": []
				},
				{
					"name": "Get All E-Books",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/ebooks",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "ebooks"]
						}
					},
					"response": []
				},
				{
					"name": "Download E-Book",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/ebooks/download/1",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "ebooks", "download", "1"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üì∏ PROFILE PICTURE",
			"item": [
				{
					"name": "‚úÖ Upload Profile Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Photo upload successful', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    console.log('‚úÖ Profile photo uploaded successfully!');",
									"    console.log('Response:', pm.response.text());",
									"} else {",
									"    console.log('‚ùå Photo upload failed');",
									"    console.log('Status:', pm.response.code);",
									"    console.log('Response:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": [],
									"description": "Select an image file (JPG, PNG, etc.)"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/userprofile/photo",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "userprofile", "photo"]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile Photo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/userprofile/photo",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "userprofile", "photo"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üß™ TEST ENDPOINTS",
			"item": [
				{
					"name": "Test Public Endpoint",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/test/public",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "test", "public"]
						}
					},
					"response": []
				},
				{
					"name": "Test Member Endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/test/member",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "test", "member"]
						}
					},
					"response": []
				},
				{
					"name": "Test Admin Endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/test/admin",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["api", "test", "admin"]
						}
					},
					"response": []
				}
			]
		}
	]
}
